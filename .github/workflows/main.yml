# This is a basic workflow to help you get started with Actions
name: Deploy development server

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Deploy development server
      - name: copy file via ssh password 1
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_password: ${{ secrets.PASSWORD }}
          source: "lib/"
          target: "/var/www/html/lib/"
          rm: true
          
      - name: copy file via ssh password 2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_password: ${{ secrets.PASSWORD }}
          source: "API/"
          target: "/var/www/html/API/"
          rm: true
          
      - name: copy file via ssh password 3
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_password: ${{ secrets.PASSWORD }}
          source: "composer.json"
          target: "/var/www/html/"
